include("helpers.jl")

G = triangle_chain(7)
@time Gexcisions = all_excisions(G);
FFs = Gexcisions[5]
HHs = Gexcisions[4]
HHsSortedDict = triangle_group(triangle_sort(HHs))
fixedTriangle = collect(keys(HHsSortedDict))

TropF = tropical_linear_space(FFs[5])
for (i, j) in enumerate(HHs) 
    TropH = tropical_linear_space(j)
    n = TropF * (-TropH)
    if n >= 1
        println("$i: ", n)
    end
end

non_zero_graphs = [(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (10, 11), (10, 11), (5, 6), (10, 11), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (5, 11), (5, 11), (5, 11), (6, 10), (7, 11), (5, 7)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (5, 10), (5, 10), (5, 11), (10, 11), (6, 7), (5, 11)])), 
(Undirected_MultiGraph(11, [(2, 11), (1, 3), (2, 11), (4, 8), (2, 11), (9, 10), (9, 10), (5, 6), (9, 10), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (9, 11), (9, 11), (5, 6), (9, 11), (7, 10), (7, 10)])), 
(Undirected_MultiGraph(11, [(2, 11), (1, 3), (2, 11), (4, 8), (2, 11), (5, 10), (5, 10), (5, 10), (6, 9), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(2, 11), (1, 3), (2, 11), (4, 8), (2, 11), (5, 11), (5, 11), (5, 11), (6, 9), (7, 10), (5, 11)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (9, 11), (9, 11), (5, 10), (9, 11), (6, 7), (5, 10)])), 
(Undirected_MultiGraph(11, [(8, 9), (1, 3), (8, 9), (8, 9), (2, 4), (10, 11), (10, 11), (5, 6), (10, 11), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(8, 9), (1, 3), (8, 9), (8, 9), (2, 4), (5, 11), (5, 11), (5, 11), (6, 10), (7, 11), (5, 7)])), 
(Undirected_MultiGraph(11, [(8, 9), (1, 3), (8, 9), (8, 9), (2, 4), (5, 10), (5, 10), (5, 11), (10, 11), (6, 7), (5, 11)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (10, 11), (10, 11), (5, 6), (10, 11), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (5, 11), (5, 11), (5, 11), (6, 10), (7, 11), (5, 7)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (5, 10), (5, 10), (5, 11), (10, 11), (6, 7), (5, 11)])), 
(Undirected_MultiGraph(11, [(2, 11), (1, 3), (2, 11), (4, 8), (2, 11), (9, 10), (9, 10), (5, 6), (9, 10), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (9, 11), (9, 11), (5, 6), (9, 11), (7, 10), (7, 10)])), 
(Undirected_MultiGraph(11, [(2, 11), (1, 3), (2, 11), (4, 8), (2, 11), (5, 10), (5, 10), (5, 10), (6, 9), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(2, 11), (1, 3), (2, 11), (4, 8), (2, 11), (5, 11), (5, 11), (5, 11), (6, 9), (7, 10), (5, 11)])), 
(Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (9, 11), (9, 11), (5, 10), (9, 11), (6, 7), (5, 10)])), 
(Undirected_MultiGraph(11, [(8, 9), (1, 3), (8, 9), (8, 9), (2, 4), (10, 11), (10, 11), (5, 6), (10, 11), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(8, 9), (1, 3), (8, 9), (8, 9), (2, 4), (5, 11), (5, 11), (5, 11), (6, 10), (7, 11), (5, 7)])), 
(Undirected_MultiGraph(11, [(8, 9), (1, 3), (8, 9), (8, 9), (2, 4), (5, 10), (5, 10), (5, 11), (10, 11), (6, 7), (5, 11)])), 
(Undirected_MultiGraph(11, [(8, 11), (1, 3), (8, 11), (8, 11), (2, 4), (9, 10), (8, 11), (5, 6), (9, 10), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(8, 9), (1, 3), (8, 9), (8, 9), (2, 4), (9, 11), (8, 11), (5, 6), (9, 11), (7, 10), (7, 10)])), 
(Undirected_MultiGraph(11, [(8, 11), (1, 3), (8, 11), (8, 11), (2, 4), (5, 10), (8, 11), (5, 10), (6, 9), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(8, 11), (1, 3), (8, 11), (8, 11), (2, 4), (5, 11), (5, 8), (5, 11), (6, 9), (7, 10), (5, 11)])), 
(Undirected_MultiGraph(11, [(8, 9), (1, 3), (8, 9), (8, 9), (2, 4), (9, 11), (8, 11), (5, 10), (9, 11), (6, 7), (5, 10)])), 
(Undirected_MultiGraph(11, [(2, 11), (1, 3), (2, 11), (8, 10), (2, 11), (4, 9), (8, 10), (5, 6), (4, 9), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(2, 8), (1, 3), (2, 8), (8, 11), (2, 11), (4, 9), (8, 11), (5, 6), (4, 9), (7, 10), (7, 10)])), 
(Undirected_MultiGraph(11, [(2, 11), (1, 3), (2, 11), (8, 10), (2, 11), (5, 9), (8, 10), (5, 9), (4, 6), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(2, 8), (1, 3), (2, 8), (8, 11), (2, 11), (5, 9), (8, 11), (5, 9), (4, 6), (7, 10), (7, 10)])), 
(Undirected_MultiGraph(11, [(2, 8), (1, 3), (2, 8), (8, 11), (2, 11), (5, 10), (8, 11), (5, 10), (4, 6), (7, 9), (5, 10)])), 
(Undirected_MultiGraph(11, [(2, 8), (1, 3), (2, 8), (8, 11), (2, 11), (4, 10), (8, 11), (5, 9), (4, 10), (6, 7), (5, 9)])), 
(Undirected_MultiGraph(11, [(1, 9), (1, 9), (2, 8), (3, 4), (2, 8), (10, 11), (10, 11), (5, 6), (10, 11), (7, 11), (7, 11)])), 
(Undirected_MultiGraph(11, [(1, 9), (1, 9), (2, 8), (3, 4), (2, 8), (5, 11), (5, 11), (5, 11), (6, 10), (7, 11), (5, 7)])), 
(Undirected_MultiGraph(11, [(1, 9), (1, 9), (2, 8), (3, 4), (2, 8), (5, 10), (5, 10), (5, 11), (10, 11), (6, 7), (5, 11)]))
]

G = triangle_chain(7)
F1 = FFs[15] 
F2 = (Undirected_MultiGraph(11, [(2, 9), (1, 3), (2, 9), (4, 8), (2, 9), (10, 11), (10, 11), (5, 6), (10, 11), (7, 11), (7, 11)]))
function arboreal_pair(G, F1, F2) 
    maxChains = chains(G)
    T1 = extract_edge_labels(G1)
    T2 = extract_edge_labels(G2)
    C = coupling(T1, T2)
    println(C)
    return is_forest(C)
end

for i in non_zero_graphs
    println(arboreal_pair(G, FFs[15], i))
end